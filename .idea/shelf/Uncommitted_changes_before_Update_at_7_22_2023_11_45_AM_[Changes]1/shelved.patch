Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.sql.SQLException;\r\n\r\npublic class Main {\r\n    public static void main(String[] args){\r\n\r\n        System.out.println(\"hello\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	
+++ b/src/Main.java	
@@ -1,8 +1,41 @@
 import java.sql.SQLException;
 
 public class Main {
-    public static void main(String[] args){
+    public static void main(String[] args) throws Exception {
+
+        System.out.println("\n----Welcome to the library management system UOK!----\n");
+
+        Library library = new Library();
+
+        library.mainMenu();
+        int option = library.validateChoice(1, 7);
+
+        while (option!=7) {
+            switch(option) {
+                case 1:
+                    library.addNewBook();
+                    break;
+                case 2:
+//                    library.updateBook();
+                    break;
+                case 3:
+                    library.removeBook();
+                    break;
+                case 4:
+                    library.lendBook();
+                    break;
+                case 5:
+                    library.returnBook();
+                    break;
+                case 6:
+                    library.listAllBooks();
+                    break;
+            }
 
-        System.out.println("hello");
+            library.mainMenu();
+            option = library.validateChoice(1, 7);
+        }
+
+
     }
 }
\ No newline at end of file
Index: src/Library.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class Library {\r\n\r\n    Scanner sc=new Scanner(System.in);\r\n    Connection con;\r\n\r\n       public void addNewBook() throws SQLException, ClassNotFoundException {\r\n\r\n           con = DBconnecter.DBconnection();\r\n\r\n\r\n           System.out.println(\"Add a new book\");\r\n\r\n\r\n\r\n           System.out.println(\"Enter the ISBN\");\r\n           long ISBN= sc.nextLong();\r\n\r\n\r\n           System.out.println(\"Enter the Title\");\r\n           String title=sc.next();\r\n\r\n           System.out.println(\"Enter the Category\");\r\n           String category=sc.next();\r\n\r\n           System.out.println(\"Enter the Author Name\");\r\n           String authorName=sc.next();\r\n\r\n\r\n\r\n           PreparedStatement ps = con.prepareStatement(\"insert into book values(?,?,?,?,?)\");\r\n\r\n           ps.setLong(2, ISBN);\r\n           ps.setString(3, title);\r\n           ps.setString(4, category);\r\n           ps.setString(5, authorName);\r\n           ps.setString(6,\"available\");\r\n\r\n           int count = ps.executeUpdate();\r\n           while (count!=0) {\r\n               System.out.println(\"inserted successfully\");\r\n           }\r\n\r\n\r\n\r\n\r\n\r\n       }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Library.java b/src/Library.java
--- a/src/Library.java	
+++ b/src/Library.java	
@@ -1,54 +1,217 @@
-import java.sql.Connection;
-import java.sql.PreparedStatement;
-import java.sql.SQLException;
+import java.sql.*;
+import java.util.InputMismatchException;
 import java.util.Scanner;
 
+class InvalidInputException extends Exception{
+    public InvalidInputException(String message) {
+        super(message);
+    }
+}
 
 public class Library {
 
-    Scanner sc=new Scanner(System.in);
-    Connection con;
+    static Scanner scan = new Scanner(System.in);
+
+    public int validateChoice(int start, int end) {
+
+        int choice = -1;
+        boolean isValid = false;
+
+        while(!isValid) {
+            try {
+                choice = scan.nextInt();
+                if (choice<start || choice>end) {
+                    throw new InvalidInputException("Enter a valid choice between " + start + " and " + end + ": ");
+                }
+                isValid = true;
+            }
+            catch (InvalidInputException e) {
+                System.out.print(e.getMessage());
+            }
+            catch (InputMismatchException e) {
+                System.out.print("Enter an integer: ");
+            }
+            finally {
+                scan.nextLine();
+            }
+        }
+
+        return choice;
+
+    }
+
+    public boolean confirm() {
+        System.out.print("\nConfirm (y/n) : ");
+        String input = scan.next();
+
+        while (!input.equalsIgnoreCase("y") && !input.equalsIgnoreCase("n")) {
+            System.out.print("Enter a valid choice: ");
+            input = scan.next();
+        }
+        return input.equalsIgnoreCase("y");
+    }
+
+    public void mainMenu() {
+
+        System.out.println("\n1. Add a new book\n" +
+                "2. Update an existing book\n" +
+                "3. Remove an existing book\n" +
+                "4. Lend a book\n" +
+                "5. Return a book\n" +
+                "6. List all available books\n" +
+                "7. Exit");
+
+        System.out.print("Please select an option: ");
+    }
 
-       public void addNewBook() throws SQLException, ClassNotFoundException {
+    public void addNewBook() throws SQLException, ClassNotFoundException {
 
-           con = DBconnecter.DBconnection();
+        Connection connection = DBConnection.getConnection();
+        Statement statement = connection.createStatement();
+
+        System.out.println("\n----Add a new book----");
+
+
+        System.out.print("Enter the ISBN: ");
+        String isbn;
+
+        while (true) {
+            isbn = scan.next();
+            String query1 = "select * from book where isbn ='"+ isbn + "'";
+//            System.out.println(query1);
+            ResultSet result = statement.executeQuery(query1);
+            if (!result.next()) {
+                break;
+            }
+            else {
+                System.out.print("This ISBN already exists.\nEnter a valid ISBN: ");
+            }
+        }
 
+        scan.nextLine();
+        System.out.print("Enter the Title: ");
+        String title = scan.nextLine();
 
-           System.out.println("Add a new book");
+        System.out.print("Enter the Category: ");
+        String category = scan.next();
+        scan.nextLine();
 
+        System.out.print("Enter the Author Name: ");
+        String authorName = scan.nextLine();
 
 
-           System.out.println("Enter the ISBN");
-           long ISBN= sc.nextLong();
+        String query2 = "insert into book values (" + isbn +", '" + title + "', '" + category + "', '" + authorName + "', 'Available')";
+//        System.out.println(query2);
 
+        int rows = statement.executeUpdate(query2);
+        if (rows>0) {
+            System.out.println("\nNew Book added successfully.\n");
+        }
+        else {
+            System.out.println("error");
+        }
 
-           System.out.println("Enter the Title");
-           String title=sc.next();
+    }
 
-           System.out.println("Enter the Category");
-           String category=sc.next();
 
-           System.out.println("Enter the Author Name");
-           String authorName=sc.next();
 
+    public void lendBook() throws SQLException {
+        System.out.println("\n----Lend a Book----");
+        System.out.print("Enter the ISBN: ");
+        String isbn = scan.next();
 
+        Connection connection = DBConnection.getConnection();
+        Statement statement = connection.createStatement();
 
-           PreparedStatement ps = con.prepareStatement("insert into book values(?,?,?,?,?)");
+        String query1 = "select * from book where isbn = " + isbn;
 
-           ps.setLong(2, ISBN);
-           ps.setString(3, title);
-           ps.setString(4, category);
-           ps.setString(5, authorName);
-           ps.setString(6,"available");
+        ResultSet result = statement.executeQuery(query1);
 
-           int count = ps.executeUpdate();
-           while (count!=0) {
-               System.out.println("inserted successfully");
-           }
+        if (result.next()) {
+            String query2 = "update book set isAvailable = 'Not Available' where isbn = '" + isbn + "'";
+            int rows = statement.executeUpdate(query2);
+            if (rows>0) {
+                System.out.println("You have lend the book successfully!\n");
+            }
+            else {
+                System.out.println("error");
+            }
+        }
+        else {
+            System.out.println("Sorry, There is no book in the library with the given isbn.");
+        }
 
+        connection.close();
+        statement.close();
+    }
 
 
+    public void returnBook() throws SQLException {
+        System.out.println("\n----Return a Book----");
+        System.out.print("Enter the ISBN: ");
+        String isbn = scan.next();
 
+        Connection connection = DBConnection.getConnection();
+        Statement statement = connection.createStatement();
 
-       }
+        String query1 = "select * from book where isbn = " + isbn;
+
+        ResultSet result = statement.executeQuery(query1);
+
+        if (result.next()) {
+            String query2 = "update book set isAvailable = 'Available' where isbn = '" + isbn + "'";
+            int rows = statement.executeUpdate(query2);
+            if (rows>0) {
+                System.out.println("You have return the book successfully!\n");
+            }
+            else {
+                System.out.println("error");
+            }
+        }
+        else {
+            System.out.println("Sorry, There is no book in the library with the given isbn.");
+        }
+
+        connection.close();
+        statement.close();
+
+    }
+
+
+    public void removeBook() throws Exception {
+
+        System.out.println("\n----Remove books from library----\n");
+        String isbnNum;
+
+        System.out.print("Enter the ISBN: ");
+        isbnNum = scan.next();
+        System.out.println("\nAre you sure you want to remove this book?(Y/N)");
+        if (confirm()) {
+            Connection conn = DBConnection.getConnection();
+            String query = "delete from book where isbn = '" + isbnNum + "'";
+
+            Statement st = conn.createStatement();
+            int rows = st.executeUpdate(query);
+
+            System.out.println("Book removed successfully.");
+            conn.close();
+        }
+    }
+
+    public static void listAllBooks() throws Exception {
+
+        System.out.println("\n----Available Books in the library----\n");
+        String query = "select * from book where isAvailable = 'Available'";
+        Connection conn = DBConnection.getConnection();
+
+        Statement st = conn.createStatement();
+        ResultSet rs = st.executeQuery(query);
+
+        while(rs.next()){
+            System.out.println(rs.getString(1)+"-"+rs.getString(2)+"-"+rs.getString(3)+"-"+rs.getString(4));
+        }
+        st.close();
+        conn.close();
+    }
+
 }
Index: JuniorHack 5.0 - TechWarriors.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"module-library\">\r\n      <library>\r\n        <CLASSES>\r\n          <root url=\"jar://$USER_HOME$/Downloads/mysql-connector-j-8.0.33/mysql-connector-j-8.0.33/mysql-connector-j-8.0.33.jar!/\" />\r\n        </CLASSES>\r\n        <JAVADOC />\r\n        <SOURCES />\r\n      </library>\r\n    </orderEntry>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JuniorHack 5.0 - TechWarriors.iml b/JuniorHack 5.0 - TechWarriors.iml
--- a/JuniorHack 5.0 - TechWarriors.iml	
+++ b/JuniorHack 5.0 - TechWarriors.iml	
@@ -10,7 +10,7 @@
     <orderEntry type="module-library">
       <library>
         <CLASSES>
-          <root url="jar://$USER_HOME$/Downloads/mysql-connector-j-8.0.33/mysql-connector-j-8.0.33/mysql-connector-j-8.0.33.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/mysql-connector-j-8.0.32.jar!/" />
         </CLASSES>
         <JAVADOC />
         <SOURCES />
